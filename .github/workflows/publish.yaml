# TODO: Remove assumption version is increased to unreleased version.

name: publish packages
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
jobs:
  version:
    # Check if core or cli versions changed and output metadata
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      # Check if core changed
      - name: Check @iota-wiki/core changed in current branch
        id: core-to-current
        uses: EndBug/version-check@v2
        with:
          file-name: ./package.json
          diff-search: true
          # Only compare before and after if before exists, else check commits
          file-url: ${{ github.event.before && '::before' }}
          static-checking: ${{ github.event.before && 'localIsNew' }}
      - name: Check @iota-wiki/core changed compared to main branch
        id: core-to-main
        uses: EndBug/version-check@v2
        with:
          file-name: ./package.json
          file-url: https://raw.githubusercontent.com/iota-wiki/iota-wiki/main/package.json
          static-checking: localIsNew
      # Check if cli changed
      - name: Check @iota-wiki/cli changed in current branch
        id: cli-to-current
        uses: EndBug/version-check@v2
        with:
          file-name: ./cli/package.json
          diff-search: true
          # Only compare before and after if before exists, else check commits
          file-url: ${{ github.event.before && '::before' }}
          static-checking: ${{ github.event.before && 'localIsNew' }}
      - name: Check @iota-wiki/cli changed compared to main branch
        id: cli-to-main
        uses: EndBug/version-check@v2
        with:
          file-name: ./cli/package.json
          file-url: https://raw.githubusercontent.com/iota-wiki/iota-wiki/main/cli/package.json
          static-checking: localIsNew
    outputs:
      core-changed: ${{ steps.core-to-current.outputs.changed == 'true' && steps.core-to-main.outputs.changed == 'true' }}
      core-version: ${{ steps.core-to-current.outputs.version }}
      cli-changed: ${{ steps.cli-to-current.outputs.changed == 'true' && steps.cli-to-main.outputs.changed == 'true' }}
      cli-version: ${{ steps.cli-to-current.outputs.version }}
  publish-core:
    # If version changed, publish with experimental tag
    runs-on: ubuntu-latest
    needs: version
    if: needs.version.outputs.core-changed == 'true'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Allow modern Yarn
        run: |
          corepack enable
      - name: Install dependencies
        run: |
          yarn install
      # Publish to NMP
      - name: Publish to NPM
        run: |
          yarn npm publish --access public --tag experimental
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          YARN_NPM_REGISTRY_SERVER: 'https://registry.npmjs.org'
      # Publish to GitHub
      - name: Publish to GitHub
        run: |
          yarn npm publish --access public --tag experimental
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          YARN_NPM_REGISTRY_SERVER: 'https://npm.pkg.github.com'
  publish-cli:
    # If version changed, publish with experimental tag
    runs-on: ubuntu-latest
    needs: version
    if: needs.version.outputs.cli-changed == 'true'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Allow modern Yarn
        run: |
          corepack enable
      - name: Install dependencies
        run: |
          yarn install
      # Publish to NMP
      - name: Publish to NPM
        run: |
          yarn workspace @iota-wiki/cli npm publish --access public --tag experimental
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          YARN_NPM_REGISTRY_SERVER: 'https://registry.npmjs.org'
      # Publish to GitHub
      - name: Publish to GitHub
        run: |
          yarn workspace @iota-wiki/cli npm publish --access public --tag experimental
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          YARN_NPM_REGISTRY_SERVER: 'https://npm.pkg.github.com'
