name: deploy
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [iota, shimmer, next]
    env:
      NODE_OPTIONS: '--max-old-space-size=3072'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Needed for showLastUpdateTime to work
      - name: Cache submodules
        uses: actions/cache@v3
        with:
          path: |
            ${{ matrix.environment }}/external
            .git/modules
          key: ${{ matrix.environment }}-submodules-${{ hashFiles('.gitmodules') }}
          restore-keys: |
            ${{ matrix.environment }}-submodules
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Allow modern Yarn
        run: |
          corepack enable
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            .yarn/cache
          key: wiki-dependencies-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            wiki-dependencies
      - name: Install dependencies
        run: |
          yarn
      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: node_modules/.cache
          key: ${{ matrix.environment }}-build-artifacts-${{ hashFiles('package.json', 'yarn.lock', 'src/**/*.*') }}
      - name: Build ${{ matrix.environment }}
        run: |
          yarn vercel:${{ matrix.environment }}
      - name: Archive ${{ matrix.environment }}
        run: |
          tar -cf ${{ matrix.environment }}.tar build
      - name: Upload ${{ matrix.environment }}
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ${{ matrix.environment }}.tar
  config:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Upload Vercel config
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: vercel.json
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
      - config
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build
      - name: Extract build
        run: |
          tar -xf iota.tar
          tar -xf shimmer.tar
          tar -xf next.tar
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
