name: deploy

on:
  pull_request:
    branches: [develop]
  workflow_dispatch:
  schedule:
    - cron:  '0 0 * * *'

jobs:
  checks:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Test Build
        run: |
          if [ -e yarn.lock ]; then
          yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi
          npm run build
  gh-release:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Add external doc config
        run: |
          export config=$(cat .github/workflows/EXTERNAL_DOCS_CONFIG)
          export replace_string='/\* AUTO GENERATED EXTERNAL DOCS CONFIG \*/'
          perl -0pe 's#$ENV{replace_string}#$ENV{config}#' docusaurus.config.js > docusaurus.config.js.cpy
          rm -f docusaurus.config.js && mv docusaurus.config.js.cpy docusaurus.config.js
      - name: Add external doc dropdown config
        run: |
          export config=$(cat .github/workflows/EXTERNAL_DOCS_DROPDOWN_CONFIG)
          export replace_string='/\* AUTO GENERATED EXTERNAL DOCS DROPDOWN CONFIG \*/'
          perl -0pe 's#$ENV{replace_string}#$ENV{config}#' docusaurus.config.js > docusaurus.config.js.cpy
          rm -f docusaurus.config.js && mv docusaurus.config.js.cpy docusaurus.config.js
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Create folder
        run: |
          mkdir external
      - name: Copy Bee docs
        run: |
          cd external
          git clone --depth=1 https://github.com/iotaledger/bee --branch dev
      - name: Copy GoShimmer docs
        run: |
          cd external
          git clone --depth=1 --sparse https://github.com/iotaledger/goshimmer
          cd goshimmer
          git sparse-checkout set documentation
          cp -rn documentation/static/img/* ../../static/img/
          cd -
      - name: Copy Wasp docs
        run: |
          cd external
          git clone --depth=1 --sparse https://github.com/iotaledger/wasp
          cd wasp
          git sparse-checkout set documentation
          cp -rn documentation/static/img/* ../../static/img/
          cd -
      - name: Copy iota.rs docs
        run: |
          cd external
          git clone --depth=1 https://github.com/iotaledger/iota.rs
          cp -rn iota.rs/documentation/static/img/* ../static/img/
      - name: Copy wallet.rs docs
        run: |
          cd external
          git clone --depth=1 https://github.com/iotaledger/wallet.rs
          cp -rn wallet.rs/documentation/static/img/* ../static/img/
      - name: Copy stronghold.rs docs
        run: |
          cd external
          git clone --depth=1  https://github.com/iotaledger/stronghold.rs
          cd -
      - name: Copy IOTA 2.0 specs
        run: |
          cd external
          git clone --depth=1 https://github.com/iotaledger/IOTA-2.0-Research-Specifications --branch docusaurus
      - name: Copy Chrysalis docs
        run: |
          cd external
          git clone --depth=1 https://github.com/iotaledger/chrysalis-docs
          cp -rn chrysalis-docs/static/img/* ../static/img/
      - name: Copy Hornet docs
        run: |
          cd external
          git clone --depth=1 https://github.com/gohornet/hornet
          cp -rn hornet/documentation/static/img/* ../static/img/
      - name: Copy Identity docs
        run: |
          cd external
          git clone --depth=1 https://github.com/iotaledger/identity.rs
          cp -rn identity.rs/documentation/static/img/* ../static/img/
      - name: Return to root folder
        run: cd ..
      - name: Build
        run: |
          if [ -e yarn.lock ]; then
          yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi
          npm run build
      - name: Release to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          cname: wiki.iota.org
      - name: Create search index env file
        run: |
          touch search.env
          echo TYPESENSE_API_KEY=${{ secrets.TYPESENSE_API_KEY }} >> search.env
          echo TYPESENSE_HOST=${{ secrets.TYPESENSE_HOST }} >> search.env
          echo TYPESENSE_PORT=${{ secrets.TYPESENSE_PORT }} >> search.env
          echo TYPESENSE_PROTOCOL=${{ secrets.TYPESENSE_PROTOCOL }} >> search.env
      - name: Update search indexes
        run: |
          docker run --env-file=./search.env -e "CONFIG=$(cat .github/config/search.config.json | jq -r tostring)" typesense/docsearch-scraper

