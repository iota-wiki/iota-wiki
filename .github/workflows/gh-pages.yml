name: deploy

on:
  pull_request:
    branches: [develop]
  workflow_dispatch:
  schedule:
    - cron:  '0 0 * * *'

jobs:
  checks:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Test Build
        run: |
          if [ -e yarn.lock ]; then
          yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi
          npm run build
  gh-release:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install dependencies
        run: |
          if [ -e yarn.lock ]; then
          yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi
      - name: Add external doc config
        run: |
          yarn cli start
      - name: Checkout external docs
        run: |
          yarn cli checkout --no-overwrite
      - name: Build
        run: |
          npm run build
      - name: Release to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          cname: wiki.iota.org
      - name: Create search index env file
        run: |
          touch search.env
          echo TYPESENSE_API_KEY=${{ secrets.TYPESENSE_API_KEY }} >> search.env
          echo TYPESENSE_HOST=${{ secrets.TYPESENSE_HOST }} >> search.env
          echo TYPESENSE_PORT=${{ secrets.TYPESENSE_PORT }} >> search.env
          echo TYPESENSE_PROTOCOL=${{ secrets.TYPESENSE_PROTOCOL }} >> search.env
      - name: Update search indexes
        run: |
          docker run --env-file=./search.env -e "CONFIG=$(cat .github/config/search.config.json | jq -r tostring)" typesense/docsearch-scraper

