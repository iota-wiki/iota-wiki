name: build
on:
  workflow_call:
    inputs:
      environment:
        description: 'The environment to build'
        required: true
        type: string
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Avoid running out of memory
      NODE_OPTIONS: '--max-old-space-size=3072'
    steps:
      - uses: actions/checkout@v3
        with:
          # Needed for showLastUpdateTime to work
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Allow modern Yarn
        run: |
          corepack enable
      # Dependencies manually cached because `actions/setup-node@v3` does not support corepack
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            .yarn/cache
          key: wiki-dependencies-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            wiki-dependencies
      - name: Install dependencies
        run: |
          yarn
      # Submodules cached per environment to save time
      - name: Cache submodules
        uses: actions/cache@v3
        with:
          path: |
            ${{ inputs.environment }}/external
            .git/modules
          key: ${{ inputs.environment }}-submodules-${{ hashFiles('.gitmodules') }}
          restore-keys: |
            ${{ inputs.environment }}-submodules
      # Artifacts cached after install to prevent removal by Yarn
      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: node_modules/.cache
          key: ${{ inputs.environment }}-build-artifacts-${{ hashFiles('package.json', 'yarn.lock', 'src/**/*.*') }}
      - name: Build ${{ inputs.environment }}
        run: |
          yarn build:production:${{ inputs.environment }}
      # Archive build directory to single file to reduce upload time
      - name: Archive ${{ inputs.environment }}
        run: |
          tar -cf ${{ inputs.environment }}.tar build
      - name: Upload ${{ inputs.environment }}
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ${{ inputs.environment }}.tar
